elasticsearch.host={{ elasticsearch_host }}
elasticsearch.port={{ elasticsearch_port }}
elasticsearch.scheme=http
elasticsearch.basepath=
elasticsearch.oersi_viewer_username={{ elasticsearch_oersi_viewer_username }}
elasticsearch.oersi_viewer_password={{ elasticsearch_oersi_viewer_password }}
elasticsearch.oersi_backend_manager_username={{ elasticsearch_oersi_backend_manager_username }}
elasticsearch.oersi_backend_manager_password={{ elasticsearch_oersi_backend_manager_password }}

# Database
spring.datasource.url=jdbc:mariadb://{{ mariadb_host }}:{{ mariadb_port }}/{{ oerindex_db.name }}
spring.datasource.driverClassName=org.mariadb.jdbc.Driver
spring.datasource.username={{ oerindex_db.user }}
spring.datasource.password={{ oerindex_db.password }}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
spring.jpa.properties.hibernate.id.new_generator_mappings=false
spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# crud oer metadata access
oermetadata.manage.user={{ oerindex_backend_oermetadata_manage_user }}
oermetadata.manage.password={{ oerindex_backend_oermetadata_manage_password }}

# feature: add missing labels of known vocabularies
feature.add_missing_labels={{ oerindex_backend_features_add_missing_labels }}
# feature: add missing parent items in hierarchical vocabularies
feature.add_missing_parent_items_of_hierarchical_vocabs={{ oerindex_backend_features_add_missing_parent_items_of_hierarchical_vocabs }}
# feature: add missing infos like embedUrl, image width and height to metadata (see autoupdate.definitions[i] config below)
feature.add_missing_metadata_infos={{ oerindex_backend_features_add_missing_metadata_infos }}

oersi.support.mail={{ oerindex_backend_support_mail }}
{% for entry in oerindex_backend_mail_config %}
spring.mail.{{ entry.property }}={{ entry.value }}
{% endfor %}

# config of feature "add_missing_metadata_infos"
# regex - (required) identifier of the data must match this regex to apply the definition
# embedUrl - A URL pointing to a player for a specific video. (groups from the regex can be inserted via placeholder ###<group_index>###)
# providerName - The name of the resource provider.
# providerUrl - The url of the resource provider.
{% for definition in oerindex_backend_autoupdate_definitions %}
autoupdate.definitions[{{ loop.index0 }}].regex={{ definition.regex }}
autoupdate.definitions[{{ loop.index0 }}].embedUrl={{ definition.embedUrl | default("") }}
autoupdate.definitions[{{ loop.index0 }}].providerName={{ definition.providerName | default("") }}
autoupdate.definitions[{{ loop.index0 }}].providerUrl={{ definition.providerUrl | default("") }}
{% endfor %}
