#!/bin/bash
# {{ ansible_managed }}
#
# Updates vocab schemes used by OERSI-backend.
#

{% for scheme_update in (oerindex_backend_vocab_scheme_updates | default([], true)) %}
scheme=$(wget -qO- {{ scheme_update.schemeUrl }})
if [ $? -ne 0 ]; then
  echo "Download of scheme failed"
else
  VOCAB_UPDATE_BODY="{\"vocabIdentifier\": \"{{ scheme_update.vocabName }}\", \"items\": []}"
  for ID in $(echo "$scheme" | jq -r '.hasTopConcept[] | .. | .id? // empty')
  do
    for CHILD_ID in $(echo "$scheme" | jq -r ".hasTopConcept[] | .. | select(.id? == \"$ID\") | select(has(\"narrower\")) | .narrower[].id")
    do
      VOCAB_UPDATE_BODY=$(echo "$VOCAB_UPDATE_BODY" | jq ".items += [{\"key\": \"$CHILD_ID\", \"parentKey\": \"$ID\"}]")
    done
  done
  curl --netrc-file {{ base_dir }}/conf/oer_backend_access -X POST --header 'Content-Type: application/json' -H 'Accept: application/json' "{{ oerindex_backend_internal_api_base_url }}/vocab/bulk" -d "$VOCAB_UPDATE_BODY"
fi
{% endfor %}
