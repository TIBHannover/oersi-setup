---
oerindex_backend_loglevel: INFO
oerindex_backend_label_files:
  - labels-002-conditions-of-access.json
  - labels-002-educational-audience.json
  - labels-002-hcrt.json
  - labels-002-hochschulfaechersystematik.json
  - labels-002-educational-level.json

oerindex_backend_configdir: "{{ oerindex_backend_downloaddir }}/config"

oerindex_backend_features_add_missing_labels: "true" # add missing labels of known vocabularies
oerindex_backend_features_add_missing_parent_items_of_hierarchical_vocabs: "true" # add missing parent items in hierarchical vocabularies
oerindex_backend_features_add_missing_metadata_infos: "true" # add missing infos like embedUrl, image width and height to metadata
oerindex_backend_internal_labeldefinition_api_url: '{{ oerindex_backend_internal_api_base_url }}/labeldefinition'

# config of feature "add_missing_metadata_infos"
# regex - (required) identifier of the data must match this regex to apply the definition
# embedUrl - A URL pointing to a player for a specific video. (groups from the regex can be inserted via placeholder ###<group_index>###)
# providerName - The name of the resource provider.
# providerUrl - The url of the resource provider.
oerindex_backend_autoupdate_definitions:
  - regex: "https://av.tib.eu/media/([0-9]+)"
    embedUrl: "https://av.tib.eu/player/###1###"
    providerName: "TIB AV-Portal"
    providerUrl: "https://av.tib.eu"
  - regex: "https://(?:www.youtube.com/watch\\\\?v\\\\=|youtu.be/)([a-zA-Z0-9-_]+)(?:&.+)?"
    embedUrl: "https://www.youtube-nocookie.com/embed/###1###"
    providerName: "YouTube"
    providerUrl: "https://youtube.com/"

oerindex_backend_vocab_scheme_update_schedule_hour: "21"
oerindex_backend_vocab_scheme_updates:
  - schemeUrl: https://w3id.org/kim/hochschulfaechersystematik/scheme.json
    vocabName: hochschulfaechersystematik

# create a mapping from publisher to the OERSI-institution-filter (format: regex - has to match the publisher-name; name - name that should be used in the institution-filter, capturing groups from the regex may be used (default: 1st capturing group))
institution_from_publisher_whitelist: []
oerindex_backend_labelled_concept_fields:
  - about
  - audience
  - conditionsOfAccess
  - teaches
  - assesses
  - competencyRequired
  - educationalLevel
  - learningResourceType
oersi_backend_custom_config:
  publisherToInstitutionWhitelist: "{{ institution_from_publisher_whitelist | default([], true) }}"
  labelledConceptFields: "{{ oerindex_backend_labelled_concept_fields | default([], true) }}"
