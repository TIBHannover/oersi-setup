---
- name: Configure mapping.
  template:
    src: "mapping.json"
    dest: "{{ base_dir }}/conf/mapping.json"
    owner: "{{ oersi_user }}"
    group: "{{ oersi_user }}"
    mode: 0644
  notify: restart logstash

- name: Update oer_data template
  uri:
    url: "{{elasticsearch_api_url}}/_index_template/oer_data"
    method: PUT
    body_format: json
    body: "{{ lookup('template','mapping.json') }}"
    status_code: 200
    user: "{{elasticsearch_elastic_username}}"
    password: "{{elasticsearch_elastic_password}}"
    force_basic_auth: yes
  no_log: true

- name: Check if the oer_index.conf exists
  stat: path={{ base_dir }}/conf/oer_index.conf
  register: oer_index_conf_file_stat
  
- name: Get current installed index version
  shell: 'grep "OER_INDEX_VERSION=" {{ base_dir }}/conf/oer_index.conf | cut -d"=" -f2'
  when: oer_index_conf_file_stat.stat.exists
  register: current_installed_index_version

- name: Determine if index update is necessary
  set_fact:
    process_index_update: "{{ not oer_index_conf_file_stat.stat.exists or (current_installed_index_version.stdout | int) != elasticsearch_oer_index_version }}"

- name: Create or recreate index
  become_user: "{{ oersi_user }}"
  command: "{{ base_dir }}/bin/recreate-index.sh"
  when: process_index_update
