#!/bin/bash
# {{ ansible_managed }}
#
# Updates vocab schemes and creates files used by frontend.
#

update() {
  ELASTICSEARCH_URL=http://{{ elasticsearch_host }}:{{ elasticsearch_port }}

  read -r -d '' QUERY << EOC
  {
    "query": {
      "bool": {
        "must": [
          {
            "match": { "vocabIdentifier": "$1" }
          },
          {
            "exists": {"field": "parentKey"}
            
          }
        ]
      }
    },
    "_source": ["itemKey", "parentKey"], 
    "size": 10000
  }
EOC
  RESPONSE=$(curl -s --netrc-file {{ base_dir }}/conf/oer_index_access --header 'Content-Type: application/json' -d "$QUERY" -X POST "${ELASTICSEARCH_URL}/oersi_backend_vocab_item/_search")
  echo $RESPONSE | jq -r '[.hits.hits[] | {"\(._source.itemKey)": "\(._source.parentKey)"}] | reduce .[] as $in ({}; . *= $in)' | jq --sort-keys . > $2
}

{% for scheme_update in (search_index_frontend_vocab_scheme_updates | default([], true)) %}
update {{ scheme_update.vocabName }} {{ scheme_update.parentMapFile }}
gzip -fk {{ scheme_update.parentMapFile }}
{% endfor %}
